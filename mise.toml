[tools]
"aqua:astral-sh/uv" = 'latest'
"aqua:pnpm/pnpm" = 'latest'
node = "24"
python = '3.13'

[tasks.default]
depends = ['migrate', 'api-dev', 'client-dev']

[tasks.api-dev]
run = 'uv run granian --interface asgi config.asgi:application'

[tasks.client-dev]
run = 'pnpm dev'

[tasks.migrate]
run = 'uv run manage.py migrate'

[tasks.reset-migrations]
run = [
  'uv run manage.py migrate feedback_bot zero',
  'rm -rf feedback_bot/migrations/0*.py',
  'rm -rf feedback_bot/migrations/__pycache__',
  'uv run manage.py makemigrations',
  'uv run manage.py migrate',
]

[tasks.generate-encryption-key]
run = 'uv run python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"'

[tasks.generate-secret-key]
run = 'uv run python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"'

[tasks.i18n_create]
description = 'Create or update translation files for all enabled languages'
run = '''
echo $TELEGRAM_LANGUAGES | tr ' ' '\n' | xargs -n1 -I {} uv run manage.py makemessages -l {}
'''

[tasks.i18n_update]
run = 'uv run manage.py makemessages -a'

[tasks.i18n_compile]
run = 'uv run manage.py compilemessages'

[tasks.update_dependencies]
run = ['uv lock -U', 'uv sync', 'pnpm dlx npm-check-updates -u', 'pnpm install']

[env]
# Granian
GRANIAN_PORT = 8001
GRANIAN_RELOAD = 0
GRANIAN_RELOAD_IGNORE_PATTERNS = '(?<!\.py)$'
GRANIAN_STATIC_PATH_MOUNT = 'build'
GRANIAN_WORKERS = 4

# Postgres
POSTGRES_DB = 'feedback_bot'
POSTGRES_PASSWORD = 'SECRET_KEY'
POSTGRES_PORT = 5432
POSTGRES_USER = 'feedback_bot_user'

# Django
DJANGO_ALLOWED_HOSTS = 'localhost 127.0.0.1 [::1]'
DJANGO_DEBUG = false
DJANGO_SECRET_KEY = ''
DJANGO_SETTINGS_MODULE = 'config.settings'
DJANGO_USE_SQLITE = false

# Telegram
TELEGRAM_BUILDER_BOT_WEBHOOK_NAME = 'telegram'
TELEGRAM_BUILDER_BOT_WEBHOOK_SECRET = 'changeme'
TELEGRAM_BUILDER_BOT_WEBHOOK_URL = ''
# Token from https://telegram.me/BotFather
TELEGRAM_BUILDER_BOT_TOKEN = '0000000000:aaaaaaaaaaaaaaaaaaaa'
# Telegram account IDs that will have administrator permissions of the bot
TELEGRAM_BUILDER_BOT_ADMINS = '000000,000000,000000'
# Chat that will receive the bot messages
TELEGRAM_ADMIN_CHAT_ID = '-10000000000'
# Group topic that will be used for bot logs
TELEGRAM_LOG_TOPIC_ID = 1
# Require admin approval to add new bot
TELEGRAM_NEW_BOT_ADMIN_APPROVAL = "true"
# Encryption key for storing feedback bots tokens
# Generate with `mise r generate-encryption-key`
TELEGRAM_ENCRYPTION_KEY = 'changeme'
# Languages that the bots will support
TELEGRAM_LANGUAGES = 'en ar'

# Vite
VITE_PORT = 8000

# SvelteKit 
# Development mode
PUBLIC_DEBUG = false

[env.mise]
file = '.env'
