# Generated by Django 5.2.5 on 2025-08-30 20:34

import uuid
from typing import ClassVar

import django.db.models.deletion
from django.db import migrations, models
from django.db.migrations.operations.base import Operation


class Migration(migrations.Migration):
    initial = True

    dependencies: ClassVar[list[str]] = []

    operations: ClassVar[list[Operation]] = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text='UUID for webhook URL to avoid exposing tokens.',
                        unique=True,
                    ),
                ),
                ('name', models.CharField(max_length=64)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('telegram_id', models.BigIntegerField(unique=True)),
                ('_token', models.CharField(db_column='token', max_length=255, unique=True)),
                ('forward_chat_id', models.BigIntegerField(blank=True, null=True)),
                (
                    'start_message',
                    models.TextField(default='Welcome! Send your feedback here.', max_length=4096),
                ),
                (
                    'feedback_received_message',
                    models.TextField(default='Thank you for your feedback!', max_length=4096),
                ),
                (
                    'confirmations_on',
                    models.BooleanField(
                        default=True, help_text='Send confirmation messages to users.'
                    ),
                ),
                ('enabled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'telegram_id',
                    models.BigIntegerField(primary_key=True, serialize=False, unique=True),
                ),
                ('username', models.CharField(blank=True, max_length=32, null=True)),
                ('language_code', models.CharField(default='en', max_length=10)),
                ('is_whitelisted', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BotStats',
            fields=[
                (
                    'bot',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='stats',
                        serialize=False,
                        to='feedback_bot.bot',
                    ),
                ),
                ('incoming_messages', models.PositiveIntegerField(default=0)),
                ('outgoing_messages', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackChat',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('user_telegram_id', models.BigIntegerField()),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'topic_id',
                    models.BigIntegerField(
                        blank=True,
                        help_text='The ID of the forum topic for this user in the forward_chat_id group.',
                        null=True,
                    ),
                ),
                (
                    'bot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='feedback_chats',
                        to='feedback_bot.bot',
                    ),
                ),
            ],
            options={
                'unique_together': {('bot', 'user_telegram_id')},
            },
        ),
        migrations.AddField(
            model_name='bot',
            name='owner',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='bots',
                to='feedback_bot.user',
            ),
        ),
        migrations.CreateModel(
            name='BannedUser',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_telegram_id', models.BigIntegerField()),
                (
                    'bot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='banned_users',
                        to='feedback_bot.bot',
                    ),
                ),
            ],
            options={
                'unique_together': {('bot', 'user_telegram_id')},
            },
        ),
        migrations.CreateModel(
            name='MessageMapping',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('user_message_id', models.BigIntegerField()),
                ('owner_message_id', models.BigIntegerField(unique=True)),
                (
                    'bot',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='feedback_bot.bot'
                    ),
                ),
                (
                    'user_chat',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='feedback_bot.feedbackchat'
                    ),
                ),
            ],
            options={
                'unique_together': {('bot', 'user_message_id')},
            },
        ),
    ]
