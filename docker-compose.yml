---
x-defaults: &defaults
  restart: unless-stopped
  logging:
    driver: local
    options:
      max-size: '100m'

services:
  db:
    <<: *defaults
    image: public.ecr.aws/docker/library/postgres:18-alpine
    ports:
      - '127.0.0.1:${POSTGRES_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 6

  app:
    <<: *defaults
    container_name: feedbackbot
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - GRANIAN_HOST=${GRANIAN_HOST:-0.0.0.0}
      - GRANIAN_PORT=${GRANIAN_PORT:-8001}
      - GRANIAN_WORKERS=${GRANIAN_WORKERS:-4}
      - GRANIAN_THREADS=${GRANIAN_THREADS:-1}
      - GRANIAN_RELOAD=${GRANIAN_RELOAD:-0}
    ports:
      - '127.0.0.1:${GRANIAN_PORT:-8001}:${GRANIAN_PORT:-8001}'
    volumes:
      - ./data:/code/data
      - /etc/localtime:/etc/localtime:ro
    command: >-
      sh -c "uv run python manage.py migrate &&
             uv run granian --interface asgi config.asgi:application"

volumes:
  postgres-data:
    driver: local
